#---------------------------------#
#      environment configuration  #
#---------------------------------#
os: Unstable
version: 1.0.{build}
install:
  - ps: |
      Get-PackageProvider -Name NuGet -ForceBootstrap
      Install-Module -Name PowerShellGet -Force -Repository PSGallery
  - ps: |
      Install-Module -Name Pester -Force
environment:
  APIKEY:
    secure: xQyAvpwa7/xHj0aSKBT81UeFjHWiG09U+nE5bobRvE3iCb9rG27NdDlR8XT1EavM

#---------------------------------#
#      build configuration        #
#---------------------------------#

build: false

#---------------------------------#
#      test configuration         #
#---------------------------------#

test_script:
    - ps: |
        $testResultsFile = ".\TestsResults.xml"
        $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru
        (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
        if ($res.FailedCount -gt 0) {
            throw "$($res.FailedCount) tests failed."
        }

#---------------------------------#
#      deployment configuration   #
#---------------------------------#

# scripts to run before deployment

# NOTE The manifest file should be dynamically identified, as should the module version data in the file
before_deploy:
  - ps: |
      # Update Manifest File
      $manifest = Join-Path $pwd\$env:APPVEYOR_PROJECT_NAME "$env:APPVEYOR_PROJECT_NAME.psd1"
      (Get-Content $manifest -Raw).Replace("1.0.0", $env:APPVEYOR_BUILD_VERSION) | Set-Content $manifest

#---------------------------------#
#      after build                #
#---------------------------------#

on_finish:
- ps: #$blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

deploy_script:
  - ps: |
      write-out "the current branch is $env:APPVEYOR_REPO_BRANCH"

      $env:psmodulepath = $env:psmodulepath + ";$pwd\$env:APPVEYOR_PROJECT_NAME"
      import-module $manifest
      
      if($env:APPVEYOR_REPO_BRANCH -eq 'Master'){
      Publish-Module -NuGetAPIKey $env:APIKEY -Module $env:APPVEYOR_PROJECT_NAME
          }
